/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RevforceImport } from './routes/revforce'
import { Route as IndexImport } from './routes/index'
import { Route as RevforceSettingsIndexImport } from './routes/revforce/settings/index'
import { Route as RevforceDashboardIndexImport } from './routes/revforce/dashboard/index'
import { Route as RevforceDashboardNewchartImport } from './routes/revforce/dashboard/newchart'
import { Route as RevforceDashboardEditchartChartIdImport } from './routes/revforce/dashboard/editchart/$chartId'
import { Route as RevforceDashboardChartdetailsChartIdImport } from './routes/revforce/dashboard/chartdetails/$chartId'

// Create/Update Routes

const RevforceRoute = RevforceImport.update({
  id: '/revforce',
  path: '/revforce',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RevforceSettingsIndexRoute = RevforceSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => RevforceRoute,
} as any)

const RevforceDashboardIndexRoute = RevforceDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => RevforceRoute,
} as any)

const RevforceDashboardNewchartRoute = RevforceDashboardNewchartImport.update({
  id: '/dashboard/newchart',
  path: '/dashboard/newchart',
  getParentRoute: () => RevforceRoute,
} as any)

const RevforceDashboardEditchartChartIdRoute =
  RevforceDashboardEditchartChartIdImport.update({
    id: '/dashboard/editchart/$chartId',
    path: '/dashboard/editchart/$chartId',
    getParentRoute: () => RevforceRoute,
  } as any)

const RevforceDashboardChartdetailsChartIdRoute =
  RevforceDashboardChartdetailsChartIdImport.update({
    id: '/dashboard/chartdetails/$chartId',
    path: '/dashboard/chartdetails/$chartId',
    getParentRoute: () => RevforceRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/revforce': {
      id: '/revforce'
      path: '/revforce'
      fullPath: '/revforce'
      preLoaderRoute: typeof RevforceImport
      parentRoute: typeof rootRoute
    }
    '/revforce/dashboard/newchart': {
      id: '/revforce/dashboard/newchart'
      path: '/dashboard/newchart'
      fullPath: '/revforce/dashboard/newchart'
      preLoaderRoute: typeof RevforceDashboardNewchartImport
      parentRoute: typeof RevforceImport
    }
    '/revforce/dashboard/': {
      id: '/revforce/dashboard/'
      path: '/dashboard'
      fullPath: '/revforce/dashboard'
      preLoaderRoute: typeof RevforceDashboardIndexImport
      parentRoute: typeof RevforceImport
    }
    '/revforce/settings/': {
      id: '/revforce/settings/'
      path: '/settings'
      fullPath: '/revforce/settings'
      preLoaderRoute: typeof RevforceSettingsIndexImport
      parentRoute: typeof RevforceImport
    }
    '/revforce/dashboard/chartdetails/$chartId': {
      id: '/revforce/dashboard/chartdetails/$chartId'
      path: '/dashboard/chartdetails/$chartId'
      fullPath: '/revforce/dashboard/chartdetails/$chartId'
      preLoaderRoute: typeof RevforceDashboardChartdetailsChartIdImport
      parentRoute: typeof RevforceImport
    }
    '/revforce/dashboard/editchart/$chartId': {
      id: '/revforce/dashboard/editchart/$chartId'
      path: '/dashboard/editchart/$chartId'
      fullPath: '/revforce/dashboard/editchart/$chartId'
      preLoaderRoute: typeof RevforceDashboardEditchartChartIdImport
      parentRoute: typeof RevforceImport
    }
  }
}

// Create and export the route tree

interface RevforceRouteChildren {
  RevforceDashboardNewchartRoute: typeof RevforceDashboardNewchartRoute
  RevforceDashboardIndexRoute: typeof RevforceDashboardIndexRoute
  RevforceSettingsIndexRoute: typeof RevforceSettingsIndexRoute
  RevforceDashboardChartdetailsChartIdRoute: typeof RevforceDashboardChartdetailsChartIdRoute
  RevforceDashboardEditchartChartIdRoute: typeof RevforceDashboardEditchartChartIdRoute
}

const RevforceRouteChildren: RevforceRouteChildren = {
  RevforceDashboardNewchartRoute: RevforceDashboardNewchartRoute,
  RevforceDashboardIndexRoute: RevforceDashboardIndexRoute,
  RevforceSettingsIndexRoute: RevforceSettingsIndexRoute,
  RevforceDashboardChartdetailsChartIdRoute:
    RevforceDashboardChartdetailsChartIdRoute,
  RevforceDashboardEditchartChartIdRoute:
    RevforceDashboardEditchartChartIdRoute,
}

const RevforceRouteWithChildren = RevforceRoute._addFileChildren(
  RevforceRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/revforce': typeof RevforceRouteWithChildren
  '/revforce/dashboard/newchart': typeof RevforceDashboardNewchartRoute
  '/revforce/dashboard': typeof RevforceDashboardIndexRoute
  '/revforce/settings': typeof RevforceSettingsIndexRoute
  '/revforce/dashboard/chartdetails/$chartId': typeof RevforceDashboardChartdetailsChartIdRoute
  '/revforce/dashboard/editchart/$chartId': typeof RevforceDashboardEditchartChartIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/revforce': typeof RevforceRouteWithChildren
  '/revforce/dashboard/newchart': typeof RevforceDashboardNewchartRoute
  '/revforce/dashboard': typeof RevforceDashboardIndexRoute
  '/revforce/settings': typeof RevforceSettingsIndexRoute
  '/revforce/dashboard/chartdetails/$chartId': typeof RevforceDashboardChartdetailsChartIdRoute
  '/revforce/dashboard/editchart/$chartId': typeof RevforceDashboardEditchartChartIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/revforce': typeof RevforceRouteWithChildren
  '/revforce/dashboard/newchart': typeof RevforceDashboardNewchartRoute
  '/revforce/dashboard/': typeof RevforceDashboardIndexRoute
  '/revforce/settings/': typeof RevforceSettingsIndexRoute
  '/revforce/dashboard/chartdetails/$chartId': typeof RevforceDashboardChartdetailsChartIdRoute
  '/revforce/dashboard/editchart/$chartId': typeof RevforceDashboardEditchartChartIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/revforce'
    | '/revforce/dashboard/newchart'
    | '/revforce/dashboard'
    | '/revforce/settings'
    | '/revforce/dashboard/chartdetails/$chartId'
    | '/revforce/dashboard/editchart/$chartId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/revforce'
    | '/revforce/dashboard/newchart'
    | '/revforce/dashboard'
    | '/revforce/settings'
    | '/revforce/dashboard/chartdetails/$chartId'
    | '/revforce/dashboard/editchart/$chartId'
  id:
    | '__root__'
    | '/'
    | '/revforce'
    | '/revforce/dashboard/newchart'
    | '/revforce/dashboard/'
    | '/revforce/settings/'
    | '/revforce/dashboard/chartdetails/$chartId'
    | '/revforce/dashboard/editchart/$chartId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RevforceRoute: typeof RevforceRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RevforceRoute: RevforceRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/revforce"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/revforce": {
      "filePath": "revforce.tsx",
      "children": [
        "/revforce/dashboard/newchart",
        "/revforce/dashboard/",
        "/revforce/settings/",
        "/revforce/dashboard/chartdetails/$chartId",
        "/revforce/dashboard/editchart/$chartId"
      ]
    },
    "/revforce/dashboard/newchart": {
      "filePath": "revforce/dashboard/newchart.tsx",
      "parent": "/revforce"
    },
    "/revforce/dashboard/": {
      "filePath": "revforce/dashboard/index.tsx",
      "parent": "/revforce"
    },
    "/revforce/settings/": {
      "filePath": "revforce/settings/index.tsx",
      "parent": "/revforce"
    },
    "/revforce/dashboard/chartdetails/$chartId": {
      "filePath": "revforce/dashboard/chartdetails/$chartId.tsx",
      "parent": "/revforce"
    },
    "/revforce/dashboard/editchart/$chartId": {
      "filePath": "revforce/dashboard/editchart/$chartId.tsx",
      "parent": "/revforce"
    }
  }
}
ROUTE_MANIFEST_END */
